{"moduleFile":{"sourceFilePath":"C:/Users/Yuliia_Khalina/Documents/stenciljs-app/src/components/lazy-component/lazy-component.tsx","jsFilePath":"C:/Users/Yuliia_Khalina/Documents/stenciljs-app/src/components/lazy-component/lazy-component.js","cmps":[{"isLegacy":false,"tagName":"lazy-component","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"LazyComponent","elementRef":null,"encapsulation":"shadow","shadowDelegatesFocus":false,"properties":[],"virtualProperties":[],"states":[],"methods":[],"listeners":[],"events":[],"watchers":[],"styles":[{"modeName":"$","styleId":"LAZY-COMPONENT","styleStr":null,"styleIdentifier":null,"compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"C:/Users/Yuliia_Khalina/Documents/stenciljs-app/src/components/lazy-component/lazy-component.css","relativePath":"lazy-component.css","originalComponentPath":"lazy-component.css"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"C:/Users/Yuliia_Khalina/Documents/stenciljs-app/src/components/lazy-component/lazy-component.js","sourceFilePath":"C:/Users/Yuliia_Khalina/Documents/stenciljs-app/src/components/lazy-component/lazy-component.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":false,"hasComponentDidLoadFn":false,"hasComponentShouldUpdateFn":false,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":false,"hasLifecycle":false,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":false,"hasMethod":false,"hasMode":false,"hasAttribute":false,"hasProp":false,"hasPropNumber":false,"hasPropBoolean":false,"hasPropString":false,"hasPropMutable":false,"hasReflect":false,"hasRenderFn":true,"hasState":false,"hasStyle":true,"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"hasWatchCallback":false,"isPlain":false,"htmlAttrNames":[],"htmlTagNames":[],"isUpdateable":false,"potentialCmpRefs":[]}],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core"],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"originalImports":["@stencil/core"],"potentialCmpRefs":[]},"jsText":"import { h } from \"@stencil/core\";\r\nexport class LazyComponent {\r\n    // @Element() el: HTMLElement;\r\n    //\r\n    // @Prop() imgSrc: string;  private observer: IntersectionObserver;  componentDidLoad() {\r\n    //   const img: HTMLImageElement =\r\n    //       this.el.shadowRoot.querySelector('img');\r\n    //\r\n    //   if (img) {\r\n    //     this.observer = new IntersectionObserver(this.onIntersection);\r\n    //     this.observer.observe(img);\r\n    //   }\r\n    // }\r\n    //\r\n    // private onIntersection = async (entries) => {\r\n    //   for (const entry of entries) {\r\n    //     if (entry.isIntersecting) {\r\n    //       if (this.observer) {\r\n    //         this.observer.disconnect();\r\n    //       }\r\n    //\r\n    //       if (entry.target.getAttribute('data-src')) {\r\n    //         entry.target.setAttribute('src',\r\n    //             entry.target.getAttribute('data-src'));\r\n    //         entry.target.removeAttribute('data-src');\r\n    //       }\r\n    //     }\r\n    //   }\r\n    // };\r\n    render() {\r\n        return ({ /*<img data-src={this.imgSrc}/>*/});\r\n    }\r\n    static get is() { return \"lazy-component\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"lazy-component.css\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"lazy-component.css\"]\r\n    }; }\r\n}\r\n"}