import { registerInstance as __stencil_registerInstance, getElement as __stencil_getElement } from "@stencil/core";
import { h } from "@stencil/core";
export const MyApp = class {
    constructor(hostRef) {
        __stencil_registerInstance(this, hostRef);
        this.onIntersection = async (entries) => {
            for (const entry of entries) {
                if (entry.isIntersecting) {
                    if (this.observer) {
                        this.observer.disconnect();
                    }
                    if (entry.target.getAttribute('data-src')) {
                        entry.target.setAttribute('src', entry.target.getAttribute('data-src'));
                        entry.target.removeAttribute('data-src');
                    }
                }
            }
        };
    }
    componentDidLoad() {
        const img = this.el.shadowRoot.querySelector('img');
        if (img) {
            this.observer = new IntersectionObserver(this.onIntersection);
            this.observer.observe(img);
        }
    }
    render() {
        return (h("div", null, h("header", null, h("h1", { class: "heading" }, "Todo List with Stencil")), h("main", null, h("todo-app", null)), h("img", { "data-src": this.imgSrc }), h("img", { "data-src": this.imgSrc }), h("img", { "data-src": this.imgSrc }), h("img", { "data-src": this.imgSrc }), h("img", { "data-src": this.imgSrc }), h("img", { "data-src": this.imgSrc }), h("img", { "data-src": this.imgSrc }), h("img", { "data-src": this.imgSrc })));
    }
    get el() { return __stencil_getElement(this); }
    static get style() { return "STYLE_TEXT_PLACEHOLDER:my-app"; }
};
