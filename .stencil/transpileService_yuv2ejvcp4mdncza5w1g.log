{"moduleFile":{"sourceFilePath":"D:/HTML/stenciljs-app/src/components/todo-list-form/todoListForm.tsx","jsFilePath":"D:/HTML/stenciljs-app/src/components/todo-list-form/todoListForm.js","cmps":[{"isLegacy":false,"tagName":"todo-list-form","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"TodoListForm","elementRef":null,"encapsulation":"none","shadowDelegatesFocus":null,"properties":[{"name":"todoItemsLength","type":"number","attribute":"todo-items-length","reflect":false,"mutable":false,"required":false,"optional":false,"complexType":{"original":"number","resolved":"number","references":{}},"docs":{"tags":[],"text":""},"internal":false}],"virtualProperties":[],"states":[{"name":"value"}],"methods":[],"listeners":[],"events":[{"name":"inputChange","method":"inputChange","bubbles":true,"cancelable":true,"composed":true,"docs":{"tags":[],"text":""},"complexType":{"original":"any","resolved":"any","references":{}},"internal":false},{"name":"submit","method":"submit","bubbles":true,"cancelable":true,"composed":true,"docs":{"tags":[],"text":""},"complexType":{"original":"any","resolved":"any","references":{}},"internal":false}],"watchers":[],"styles":[{"modeName":"$","styleId":"TODO-LIST-FORM","styleStr":null,"styleIdentifier":null,"compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"D:/HTML/stenciljs-app/src/components/todo-list-form/todo-list-form.css","relativePath":"todo-list-form.css","originalComponentPath":"todo-list-form.css"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"D:/HTML/stenciljs-app/src/components/todo-list-form/todoListForm.js","sourceFilePath":"D:/HTML/stenciljs-app/src/components/todo-list-form/todoListForm.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":false,"hasComponentDidLoadFn":false,"hasComponentShouldUpdateFn":false,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":true,"hasLifecycle":false,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":true,"hasMethod":false,"hasMode":false,"hasAttribute":true,"hasProp":true,"hasPropNumber":true,"hasPropBoolean":false,"hasPropString":false,"hasPropMutable":false,"hasReflect":false,"hasRenderFn":true,"hasState":true,"hasStyle":true,"hasVdomAttribute":true,"hasVdomXlink":false,"hasVdomClass":true,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":true,"hasVdomRef":false,"hasVdomRender":true,"hasVdomStyle":false,"hasVdomText":true,"hasWatchCallback":false,"isPlain":false,"htmlAttrNames":["class","onSubmit","type","onInput","value"],"htmlTagNames":["form","input","button"],"isUpdateable":true,"potentialCmpRefs":[]}],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core"],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"originalImports":["@stencil/core"],"potentialCmpRefs":[]},"jsText":"import { h } from \"@stencil/core\";\r\nexport class TodoListForm {\r\n    constructor() {\r\n        this.value = '';\r\n    }\r\n    handleOnChange(e) {\r\n        this.value = e.target.value;\r\n        this.inputChange.emit(this.value);\r\n    }\r\n    handleOnSubmit(e) {\r\n        e.preventDefault();\r\n        this.submit.emit(this.value);\r\n        this.value = '';\r\n    }\r\n    render() {\r\n        const handleOnChange = (e) => this.handleOnChange(e);\r\n        const handleOnSubmit = (e) => this.handleOnSubmit(e);\r\n        return (h(\"form\", { class: \"todo-list-form\", onSubmit: handleOnSubmit },\r\n            h(\"input\", { type: \"text\", onInput: handleOnChange, value: this.value }),\r\n            h(\"button\", null,\r\n                \"Add #\",\r\n                this.todoItemsLength + 1)));\r\n    }\r\n    static get is() { return \"todo-list-form\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"todo-list-form.css\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"todo-list-form.css\"]\r\n    }; }\r\n    static get properties() { return {\r\n        \"todoItemsLength\": {\r\n            \"type\": \"number\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"number\",\r\n                \"resolved\": \"number\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"todo-items-length\",\r\n            \"reflect\": false\r\n        }\r\n    }; }\r\n    static get states() { return {\r\n        \"value\": {}\r\n    }; }\r\n    static get events() { return [{\r\n            \"method\": \"inputChange\",\r\n            \"name\": \"inputChange\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"complexType\": {\r\n                \"original\": \"any\",\r\n                \"resolved\": \"any\",\r\n                \"references\": {}\r\n            }\r\n        }, {\r\n            \"method\": \"submit\",\r\n            \"name\": \"submit\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"complexType\": {\r\n                \"original\": \"any\",\r\n                \"resolved\": \"any\",\r\n                \"references\": {}\r\n            }\r\n        }]; }\r\n}\r\n"}